version: '3'

services:
  postgres:
    container_name: weight-daily-db
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "25000:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-custom.conf:/etc/postgresql/postgresql.conf

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9000:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=${KAFKA_CLUSTERS_0_NAME}
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS}
      - KAFKA_CLUSTERS_0_ZOOKEEPER=${KAFKA_CLUSTERS_0_ZOOKEEPER}

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  debezium:
    image: debezium/example-postgres:1.6
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - kafka

  connect:
    image: debezium/connect:1.7
    ports:
      - "8083:8083"
    links:
      - kafka
      - zookeeper
    environment:
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}
      - GROUP_ID=${GROUP_ID}
      - CONFIG_STORAGE_TOPIC=${CONFIG_STORAGE_TOPIC}
      - OFFSET_STORAGE_TOPIC=${OFFSET_STORAGE_TOPIC}
      - STATUS_STORAGE_TOPIC=${STATUS_STORAGE_TOPIC}
      - KEY_CONVERTER=${KEY_CONVERTER}
      - VALUE_CONVERTER=${VALUE_CONVERTER}
      - INTERNAL_KEY_CONVERTER=${INTERNAL_KEY_CONVERTER}
      - INTERNAL_VALUE_CONVERTER=${INTERNAL_VALUE_CONVERTER}
      - INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE=${INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE}
      - INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE=${INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE}
      - STATUS_STORAGE_REPLICATION_FACTOR=${STATUS_STORAGE_REPLICATION_FACTOR}
      - OFFSET_STORAGE_REPLICATION_FACTOR=${OFFSET_STORAGE_REPLICATION_FACTOR}
      - CONFIG_STORAGE_REPLICATION_FACTOR=${CONFIG_STORAGE_REPLICATION_FACTOR}
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=${CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE}
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=${CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE}

volumes:
  postgres-data: